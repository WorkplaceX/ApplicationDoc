// Do not modify this file. It's generated by Framework.Cli generate command.

namespace DatabaseIntegrate.dbo
{
    using System;
    using System.Collections.Generic;
    using System.Globalization;
    using Database.dbo;

    public static class FrameworkConfigGridIntegrateAppCli
    {
        public static List<FrameworkConfigGridIntegrate> RowList
        {
            get
            {
                var result = new List<FrameworkConfigGridIntegrate>
                {
                    new FrameworkConfigGridIntegrate { Id = 0, IdName = "Doc.Calculated.LoginUserSignUp; ", TableId = 0, TableIdName = "Doc.Calculated.LoginUserSignUp", TableNameCSharp = "Doc.Calculated.LoginUserSignUp", ConfigName = null, RowCountMax = null, IsAllowInsert = false, IsShowHeader = false, IsShowPagination = false, IsDelete = false },
                    new FrameworkConfigGridIntegrate { Id = 0, IdName = "Doc.Content; ", TableId = 0, TableIdName = "Doc.Content", TableNameCSharp = "Doc.Content", ConfigName = null, RowCountMax = null, IsAllowInsert = null, IsShowHeader = null, IsShowPagination = null, IsDelete = false },
                    new FrameworkConfigGridIntegrate { Id = 0, IdName = "Doc.Content; Md", TableId = 0, TableIdName = "Doc.Content", TableNameCSharp = "Doc.Content", ConfigName = "Md", RowCountMax = null, IsAllowInsert = false, IsShowHeader = false, IsShowPagination = false, IsDelete = false },
                    new FrameworkConfigGridIntegrate { Id = 0, IdName = "Doc.LoginUser; ", TableId = 0, TableIdName = "Doc.LoginUser", TableNameCSharp = "Doc.LoginUser", ConfigName = null, RowCountMax = null, IsAllowInsert = null, IsShowHeader = null, IsShowPagination = null, IsDelete = false },
                    new FrameworkConfigGridIntegrate { Id = 0, IdName = "Doc.LoginUser; SignIn", TableId = 0, TableIdName = "Doc.LoginUser", TableNameCSharp = "Doc.LoginUser", ConfigName = "SignIn", RowCountMax = null, IsAllowInsert = false, IsShowHeader = false, IsShowPagination = false, IsDelete = false },
                    new FrameworkConfigGridIntegrate { Id = 0, IdName = "Doc.StorageFileDisplay; ", TableId = 0, TableIdName = "Doc.StorageFileDisplay", TableNameCSharp = "Doc.StorageFileDisplay", ConfigName = null, RowCountMax = null, IsAllowInsert = null, IsShowHeader = null, IsShowPagination = null, IsDelete = false },
                };
                return result;
            }
        }
    }

    public static class FrameworkConfigFieldIntegrateAppCli
    {
        public static List<FrameworkConfigFieldIntegrate> RowList
        {
            get
            {
                var result = new List<FrameworkConfigFieldIntegrate>
                {
                    new FrameworkConfigFieldIntegrate { Id = 0, ConfigGridId = 0, ConfigGridIdName = "Doc.Content; Md", FieldId = 0, FieldIdName = "Doc.Content; Name", InstanceName = null, TableNameCSharp = "Doc.Content", ConfigName = "Md", FieldNameCSharp = "Name", Text = null, Description = null, IsVisible = false, IsReadOnly = null, IsMultiline = null, Sort = null, IsDelete = false },
                    new FrameworkConfigFieldIntegrate { Id = 0, ConfigGridId = 0, ConfigGridIdName = "Doc.Content; ", FieldId = 0, FieldIdName = "Doc.Content; NavigatePath", InstanceName = null, TableNameCSharp = "Doc.Content", ConfigName = null, FieldNameCSharp = "NavigatePath", Text = "Path", Description = null, IsVisible = null, IsReadOnly = null, IsMultiline = null, Sort = null, IsDelete = false },
                    new FrameworkConfigFieldIntegrate { Id = 0, ConfigGridId = 0, ConfigGridIdName = "Doc.Content; Md", FieldId = 0, FieldIdName = "Doc.Content; NavigatePath", InstanceName = null, TableNameCSharp = "Doc.Content", ConfigName = "Md", FieldNameCSharp = "NavigatePath", Text = null, Description = null, IsVisible = false, IsReadOnly = null, IsMultiline = null, Sort = null, IsDelete = false },
                    new FrameworkConfigFieldIntegrate { Id = 0, ConfigGridId = 0, ConfigGridIdName = "Doc.Content; Md", FieldId = 0, FieldIdName = "Doc.Content; NavigateTree", InstanceName = null, TableNameCSharp = "Doc.Content", ConfigName = "Md", FieldNameCSharp = "NavigateTree", Text = null, Description = null, IsVisible = false, IsReadOnly = null, IsMultiline = null, Sort = null, IsDelete = false },
                    new FrameworkConfigFieldIntegrate { Id = 0, ConfigGridId = 0, ConfigGridIdName = "Doc.Content; ", FieldId = 0, FieldIdName = "Doc.Content; SitemapDate", InstanceName = null, TableNameCSharp = "Doc.Content", ConfigName = null, FieldNameCSharp = "SitemapDate", Text = null, Description = null, IsVisible = null, IsReadOnly = null, IsMultiline = null, Sort = null, IsDelete = false },
                    new FrameworkConfigFieldIntegrate { Id = 0, ConfigGridId = 0, ConfigGridIdName = "Doc.Content; Md", FieldId = 0, FieldIdName = "Doc.Content; SitemapDate", InstanceName = null, TableNameCSharp = "Doc.Content", ConfigName = "Md", FieldNameCSharp = "SitemapDate", Text = null, Description = null, IsVisible = false, IsReadOnly = null, IsMultiline = null, Sort = null, IsDelete = false },
                    new FrameworkConfigFieldIntegrate { Id = 0, ConfigGridId = 0, ConfigGridIdName = "Doc.Content; Md", FieldId = 0, FieldIdName = "Doc.Content; Sort", InstanceName = null, TableNameCSharp = "Doc.Content", ConfigName = "Md", FieldNameCSharp = "Sort", Text = null, Description = null, IsVisible = false, IsReadOnly = null, IsMultiline = null, Sort = null, IsDelete = false },
                    new FrameworkConfigFieldIntegrate { Id = 0, ConfigGridId = 0, ConfigGridIdName = "Doc.Content; ", FieldId = 0, FieldIdName = "Doc.Content; TextHtml", InstanceName = null, TableNameCSharp = "Doc.Content", ConfigName = null, FieldNameCSharp = "TextHtml", Text = null, Description = null, IsVisible = false, IsReadOnly = null, IsMultiline = null, Sort = null, IsDelete = false },
                    new FrameworkConfigFieldIntegrate { Id = 0, ConfigGridId = 0, ConfigGridIdName = "Doc.Content; Md", FieldId = 0, FieldIdName = "Doc.Content; TextHtml", InstanceName = null, TableNameCSharp = "Doc.Content", ConfigName = "Md", FieldNameCSharp = "TextHtml", Text = null, Description = null, IsVisible = false, IsReadOnly = null, IsMultiline = null, Sort = null, IsDelete = false },
                    new FrameworkConfigFieldIntegrate { Id = 0, ConfigGridId = 0, ConfigGridIdName = "Doc.Content; Md", FieldId = 0, FieldIdName = "Doc.Content; TextMd", InstanceName = null, TableNameCSharp = "Doc.Content", ConfigName = "Md", FieldNameCSharp = "TextMd", Text = null, Description = null, IsVisible = null, IsReadOnly = null, IsMultiline = true, Sort = null, IsDelete = false },
                    new FrameworkConfigFieldIntegrate { Id = 0, ConfigGridId = 0, ConfigGridIdName = "Doc.Content; ", FieldId = 0, FieldIdName = "Doc.Content; TextMd", InstanceName = null, TableNameCSharp = "Doc.Content", ConfigName = null, FieldNameCSharp = "TextMd", Text = null, Description = null, IsVisible = false, IsReadOnly = null, IsMultiline = null, Sort = null, IsDelete = false },
                    new FrameworkConfigFieldIntegrate { Id = 0, ConfigGridId = 0, ConfigGridIdName = "Doc.Content; Md", FieldId = 0, FieldIdName = "Doc.Content; TitleHtml", InstanceName = null, TableNameCSharp = "Doc.Content", ConfigName = "Md", FieldNameCSharp = "TitleHtml", Text = null, Description = null, IsVisible = false, IsReadOnly = null, IsMultiline = null, Sort = null, IsDelete = false },
                    new FrameworkConfigFieldIntegrate { Id = 0, ConfigGridId = 0, ConfigGridIdName = "Doc.Content; Md", FieldId = 0, FieldIdName = "Doc.Content; TitleLong", InstanceName = null, TableNameCSharp = "Doc.Content", ConfigName = "Md", FieldNameCSharp = "TitleLong", Text = null, Description = null, IsVisible = false, IsReadOnly = null, IsMultiline = null, Sort = null, IsDelete = false },
                    new FrameworkConfigFieldIntegrate { Id = 0, ConfigGridId = 0, ConfigGridIdName = "Doc.LoginUser; ", FieldId = 0, FieldIdName = "Doc.LoginUser; IsDelete", InstanceName = null, TableNameCSharp = "Doc.LoginUser", ConfigName = null, FieldNameCSharp = "IsDelete", Text = null, Description = null, IsVisible = null, IsReadOnly = null, IsMultiline = null, Sort = null, IsDelete = false },
                    new FrameworkConfigFieldIntegrate { Id = 0, ConfigGridId = 0, ConfigGridIdName = "Doc.LoginUser; SignIn", FieldId = 0, FieldIdName = "Doc.LoginUser; IsDelete", InstanceName = null, TableNameCSharp = "Doc.LoginUser", ConfigName = "SignIn", FieldNameCSharp = "IsDelete", Text = null, Description = null, IsVisible = false, IsReadOnly = null, IsMultiline = null, Sort = null, IsDelete = false },
                    new FrameworkConfigFieldIntegrate { Id = 0, ConfigGridId = 0, ConfigGridIdName = "Doc.LoginUser; ", FieldId = 0, FieldIdName = "Doc.LoginUser; IsIntegrate", InstanceName = null, TableNameCSharp = "Doc.LoginUser", ConfigName = null, FieldNameCSharp = "IsIntegrate", Text = null, Description = null, IsVisible = null, IsReadOnly = null, IsMultiline = null, Sort = null, IsDelete = false },
                    new FrameworkConfigFieldIntegrate { Id = 0, ConfigGridId = 0, ConfigGridIdName = "Doc.LoginUser; SignIn", FieldId = 0, FieldIdName = "Doc.LoginUser; IsIntegrate", InstanceName = null, TableNameCSharp = "Doc.LoginUser", ConfigName = "SignIn", FieldNameCSharp = "IsIntegrate", Text = null, Description = null, IsVisible = false, IsReadOnly = null, IsMultiline = null, Sort = null, IsDelete = false },
                    new FrameworkConfigFieldIntegrate { Id = 0, ConfigGridId = 0, ConfigGridIdName = "Doc.LoginUser; ", FieldId = 0, FieldIdName = "Doc.LoginUser; Name", InstanceName = null, TableNameCSharp = "Doc.LoginUser", ConfigName = null, FieldNameCSharp = "Name", Text = "Email", Description = null, IsVisible = null, IsReadOnly = null, IsMultiline = null, Sort = null, IsDelete = false },
                    new FrameworkConfigFieldIntegrate { Id = 0, ConfigGridId = 0, ConfigGridIdName = "Doc.LoginUser; SignIn", FieldId = 0, FieldIdName = "Doc.LoginUser; Name", InstanceName = null, TableNameCSharp = "Doc.LoginUser", ConfigName = "SignIn", FieldNameCSharp = "Name", Text = "Email", Description = null, IsVisible = null, IsReadOnly = null, IsMultiline = null, Sort = null, IsDelete = false },
                    new FrameworkConfigFieldIntegrate { Id = 0, ConfigGridId = 0, ConfigGridIdName = "Doc.StorageFileDisplay; ", FieldId = 0, FieldIdName = "Doc.StorageFileDisplay; IsData", InstanceName = null, TableNameCSharp = "Doc.StorageFileDisplay", ConfigName = null, FieldNameCSharp = "IsData", Text = null, Description = null, IsVisible = false, IsReadOnly = null, IsMultiline = null, Sort = null, IsDelete = false },
                    new FrameworkConfigFieldIntegrate { Id = 0, ConfigGridId = 0, ConfigGridIdName = "Doc.StorageFileDisplay; ", FieldId = 0, FieldIdName = "Doc.StorageFileDisplay; IsDataImageThumbnail", InstanceName = null, TableNameCSharp = "Doc.StorageFileDisplay", ConfigName = null, FieldNameCSharp = "IsDataImageThumbnail", Text = null, Description = null, IsVisible = false, IsReadOnly = null, IsMultiline = null, Sort = null, IsDelete = false },
                };
                return result;
            }
        }
    }
}

namespace DatabaseIntegrate.Doc
{
    using System;
    using System.Collections.Generic;
    using System.Globalization;
    using Database.Doc;

    public static class NavigateIntegrateAppCli
    {
        public static List<NavigateIntegrate> RowList
        {
            get
            {
                var result = new List<NavigateIntegrate>
                {
                    new NavigateIntegrate { Id = 0, ParentId = 0, Name = "About", TextHtml = "<i class=\"fas fa-info-circle\"></i> About", IsDivider = false, IsNavbarEnd = false, IsContent = true, NavigatePath = "/about/", PageTypeName = null, Sort = 1005, SitemapDate = DateTime.Parse("2021-04-22 10:40", CultureInfo.InvariantCulture), IdName = "About", ParentIdName = null },
                    new NavigateIntegrate { Id = 0, ParentId = 0, Name = "Admin", TextHtml = "<i class=\"fas fa-shield-alt\"></i> Admin", IsDivider = false, IsNavbarEnd = false, IsContent = false, NavigatePath = null, PageTypeName = null, Sort = 2001, SitemapDate = null, IdName = "Admin", ParentIdName = null },
                    new NavigateIntegrate { Id = 0, ParentId = 0, Name = "AdminContent", TextHtml = "<i class=\"fas fa-book\"></i> Content", IsDivider = false, IsNavbarEnd = false, IsContent = false, NavigatePath = "/admin-content/", PageTypeName = "PageAdminContent", Sort = 2, SitemapDate = null, IdName = "AdminContent", ParentIdName = "Admin" },
                    new NavigateIntegrate { Id = 0, ParentId = 0, Name = "AdminLoginUser", TextHtml = "<i class=\"fas fa-user\"></i> User", IsDivider = false, IsNavbarEnd = false, IsContent = false, NavigatePath = "/admin-user/", PageTypeName = "PageAdminLoginUser", Sort = 1, SitemapDate = null, IdName = "AdminLoginUser", ParentIdName = "Admin" },
                    new NavigateIntegrate { Id = 0, ParentId = 0, Name = "AdminNavigate", TextHtml = "<i class=\"fas fa-sitemap\"></i> Navigate", IsDivider = false, IsNavbarEnd = false, IsContent = false, NavigatePath = "/admin-navigate/", PageTypeName = "PageAdminNavigate", Sort = 1, SitemapDate = null, IdName = "AdminNavigate", ParentIdName = "Developer" },
                    new NavigateIntegrate { Id = 0, ParentId = 0, Name = "AdminStorage", TextHtml = "<i class=\"far fa-folder\"></i> Storage", IsDivider = false, IsNavbarEnd = false, IsContent = false, NavigatePath = "/storage/", PageTypeName = "PageAdminStorage", Sort = 3, SitemapDate = null, IdName = "AdminStorage", ParentIdName = "Admin" },
                    new NavigateIntegrate { Id = 0, ParentId = 0, Name = "Application", TextHtml = "<i class=\"fas fa-window-maximize\"></i> Application", IsDivider = false, IsNavbarEnd = false, IsContent = true, NavigatePath = "/install/", PageTypeName = null, Sort = 1021, SitemapDate = DateTime.Parse("2021-04-21 01:17", CultureInfo.InvariantCulture), IdName = "Application", ParentIdName = "Install" },
                    new NavigateIntegrate { Id = 0, ParentId = 0, Name = "Cli", TextHtml = "<i class=\"fas fa-desktop\"></i> CLI", IsDivider = false, IsNavbarEnd = false, IsContent = true, NavigatePath = "/cli/", PageTypeName = null, Sort = 1004, SitemapDate = DateTime.Parse("2021-04-21 01:15", CultureInfo.InvariantCulture), IdName = "Cli", ParentIdName = null },
                    new NavigateIntegrate { Id = 0, ParentId = 0, Name = "Code", TextHtml = "<i class=\"fas fa-code-branch\"></i> Code", IsDivider = false, IsNavbarEnd = false, IsContent = true, NavigatePath = "/code/", PageTypeName = null, Sort = 1003, SitemapDate = DateTime.Parse("2021-04-21 01:19", CultureInfo.InvariantCulture), IdName = "Code", ParentIdName = null },
                    new NavigateIntegrate { Id = 0, ParentId = 0, Name = "Code Annotation", TextHtml = "<i class=\"fas fa-asterisk\"></i> Annotation", IsDivider = false, IsNavbarEnd = false, IsContent = true, NavigatePath = "/annotation/", PageTypeName = null, Sort = 1004, SitemapDate = DateTime.Parse("2021-04-22 10:44", CultureInfo.InvariantCulture), IdName = "Code Annotation", ParentIdName = "Code" },
                    new NavigateIntegrate { Id = 0, ParentId = 0, Name = "Code Counter", TextHtml = "<i class=\"fas fa-mouse\"></i> Counter", IsDivider = false, IsNavbarEnd = false, IsContent = true, NavigatePath = "/counter/", PageTypeName = null, Sort = 1002, SitemapDate = DateTime.Parse("2021-04-22 10:44", CultureInfo.InvariantCulture), IdName = "Code Counter", ParentIdName = "Code" },
                    new NavigateIntegrate { Id = 0, ParentId = 0, Name = "Code Data Grid", TextHtml = "<i class=\"fas fa-table\"></i> Data Grid", IsDivider = false, IsNavbarEnd = false, IsContent = true, NavigatePath = "/data-grid/", PageTypeName = null, Sort = 1003, SitemapDate = DateTime.Parse("2021-04-22 10:44", CultureInfo.InvariantCulture), IdName = "Code Data Grid", ParentIdName = "Code" },
                    new NavigateIntegrate { Id = 0, ParentId = 0, Name = "Code Hello World", TextHtml = "<i class=\"fas fa-globe\"></i> Hello World", IsDivider = false, IsNavbarEnd = false, IsContent = true, NavigatePath = "/hello-world/", PageTypeName = null, Sort = 1001, SitemapDate = DateTime.Parse("2021-04-22 10:15", CultureInfo.InvariantCulture), IdName = "Code Hello World", ParentIdName = "Code" },
                    new NavigateIntegrate { Id = 0, ParentId = 0, Name = "Developer", TextHtml = "<i class=\"fas fa-coffee\"></i> Developer", IsDivider = false, IsNavbarEnd = false, IsContent = false, NavigatePath = null, PageTypeName = null, Sort = 2002, SitemapDate = null, IdName = "Developer", ParentIdName = null },
                    new NavigateIntegrate { Id = 0, ParentId = 0, Name = "Excel", TextHtml = "<i class=\"fas fa-file-excel\"></i> Excel", IsDivider = false, IsNavbarEnd = false, IsContent = true, NavigatePath = "/excel/", PageTypeName = null, Sort = 1004.5, SitemapDate = DateTime.Parse("2021-04-22 10:33", CultureInfo.InvariantCulture), IdName = "Excel", ParentIdName = null },
                    new NavigateIntegrate { Id = 0, ParentId = 0, Name = "Home", TextHtml = "<i class=\"fas fa-home\"></i> Home", IsDivider = false, IsNavbarEnd = false, IsContent = true, NavigatePath = "/", PageTypeName = null, Sort = 1001, SitemapDate = DateTime.Parse("2021-04-21 01:15", CultureInfo.InvariantCulture), IdName = "Home", ParentIdName = null },
                    new NavigateIntegrate { Id = 0, ParentId = 0, Name = "IIS Server", TextHtml = "<i class=\"fas fa-server\"></i> IIS Server", IsDivider = false, IsNavbarEnd = false, IsContent = true, NavigatePath = "/iis/", PageTypeName = null, Sort = 1022, SitemapDate = DateTime.Parse("2021-04-23 09:49", CultureInfo.InvariantCulture), IdName = "IIS Server", ParentIdName = "Install" },
                    new NavigateIntegrate { Id = 0, ParentId = 0, Name = "Install", TextHtml = "<i class=\"fas fa-box-open\"></i> Install", IsDivider = false, IsNavbarEnd = false, IsContent = true, NavigatePath = null, PageTypeName = null, Sort = 1002, SitemapDate = DateTime.Parse("2021-04-21 02:01", CultureInfo.InvariantCulture), IdName = "Install", ParentIdName = null },
                    new NavigateIntegrate { Id = 0, ParentId = 0, Name = "LoginSignIn", TextHtml = "<i class=\"fas fa-sign-in-alt\"></i> Sign in", IsDivider = false, IsNavbarEnd = true, IsContent = false, NavigatePath = "/signin/", PageTypeName = "PageLoginSignIn", Sort = 2, SitemapDate = null, IdName = "LoginSignIn", ParentIdName = null },
                    new NavigateIntegrate { Id = 0, ParentId = 0, Name = "LoginSignOut", TextHtml = "<i class=\"fas fa-sign-out-alt\"></i> Sign out", IsDivider = false, IsNavbarEnd = true, IsContent = false, NavigatePath = "/signout/", PageTypeName = "PageLoginSignOut", Sort = 3, SitemapDate = null, IdName = "LoginSignOut", ParentIdName = null },
                    new NavigateIntegrate { Id = 0, ParentId = 0, Name = "LoginSignUp", TextHtml = "<i class=\"fas fa-user-plus\"></i> Sign up", IsDivider = false, IsNavbarEnd = true, IsContent = false, NavigatePath = "/signup/", PageTypeName = "PageLoginSignUp", Sort = 1, SitemapDate = null, IdName = "LoginSignUp", ParentIdName = null },
                };
                return result;
            }
        }
    }

    public static class LoginUserRoleIntegrateAppCli
    {
        public static List<LoginUserRoleIntegrate> RowList
        {
            get
            {
                var result = new List<LoginUserRoleIntegrate>
                {
                    new LoginUserRoleIntegrate { Id = 0, LoginUserId = 0, LoginRoleId = 0, IsActive = true, LoginUserIsIntegrate = true, LoginUserIdName = "a", LoginRoleIdName = "Admin" },
                    new LoginUserRoleIntegrate { Id = 0, LoginUserId = 0, LoginRoleId = 0, IsActive = true, LoginUserIsIntegrate = true, LoginUserIdName = "a", LoginRoleIdName = "Customer" },
                    new LoginUserRoleIntegrate { Id = 0, LoginUserId = 0, LoginRoleId = 0, IsActive = true, LoginUserIsIntegrate = true, LoginUserIdName = "a", LoginRoleIdName = "Guest" },
                    new LoginUserRoleIntegrate { Id = 0, LoginUserId = 0, LoginRoleId = 0, IsActive = true, LoginUserIsIntegrate = true, LoginUserIdName = "c", LoginRoleIdName = "Customer" },
                    new LoginUserRoleIntegrate { Id = 0, LoginUserId = 0, LoginRoleId = 0, IsActive = true, LoginUserIsIntegrate = true, LoginUserIdName = "c", LoginRoleIdName = "Guest" },
                    new LoginUserRoleIntegrate { Id = 0, LoginUserId = 0, LoginRoleId = 0, IsActive = true, LoginUserIsIntegrate = true, LoginUserIdName = "d", LoginRoleIdName = "Admin" },
                    new LoginUserRoleIntegrate { Id = 0, LoginUserId = 0, LoginRoleId = 0, IsActive = true, LoginUserIsIntegrate = true, LoginUserIdName = "d", LoginRoleIdName = "Customer" },
                    new LoginUserRoleIntegrate { Id = 0, LoginUserId = 0, LoginRoleId = 0, IsActive = true, LoginUserIsIntegrate = true, LoginUserIdName = "d", LoginRoleIdName = "Developer" },
                    new LoginUserRoleIntegrate { Id = 0, LoginUserId = 0, LoginRoleId = 0, IsActive = true, LoginUserIsIntegrate = true, LoginUserIdName = "d", LoginRoleIdName = "Guest" },
                    new LoginUserRoleIntegrate { Id = 0, LoginUserId = 0, LoginRoleId = 0, IsActive = true, LoginUserIsIntegrate = true, LoginUserIdName = "d", LoginRoleIdName = "Login" },
                    new LoginUserRoleIntegrate { Id = 0, LoginUserId = 0, LoginRoleId = 0, IsActive = true, LoginUserIsIntegrate = true, LoginUserIdName = "Guest", LoginRoleIdName = "Guest" },
                    new LoginUserRoleIntegrate { Id = 0, LoginUserId = 0, LoginRoleId = 0, IsActive = true, LoginUserIsIntegrate = true, LoginUserIdName = "Guest", LoginRoleIdName = "Login" },
                };
                return result;
            }
        }
    }

    public static class NavigateRoleIntegrateAppCli
    {
        public static List<NavigateRoleIntegrate> RowList
        {
            get
            {
                var result = new List<NavigateRoleIntegrate>
                {
                    new NavigateRoleIntegrate { Id = 0, NavigateId = 0, LoginRoleId = 0, IsActive = true, NavigateIdName = "About", LoginRoleIdName = "Guest" },
                    new NavigateRoleIntegrate { Id = 0, NavigateId = 0, LoginRoleId = 0, IsActive = true, NavigateIdName = "Admin", LoginRoleIdName = "Admin" },
                    new NavigateRoleIntegrate { Id = 0, NavigateId = 0, LoginRoleId = 0, IsActive = true, NavigateIdName = "Admin", LoginRoleIdName = "Developer" },
                    new NavigateRoleIntegrate { Id = 0, NavigateId = 0, LoginRoleId = 0, IsActive = true, NavigateIdName = "AdminContent", LoginRoleIdName = "Admin" },
                    new NavigateRoleIntegrate { Id = 0, NavigateId = 0, LoginRoleId = 0, IsActive = true, NavigateIdName = "AdminContent", LoginRoleIdName = "Developer" },
                    new NavigateRoleIntegrate { Id = 0, NavigateId = 0, LoginRoleId = 0, IsActive = true, NavigateIdName = "AdminLoginUser", LoginRoleIdName = "Admin" },
                    new NavigateRoleIntegrate { Id = 0, NavigateId = 0, LoginRoleId = 0, IsActive = true, NavigateIdName = "AdminLoginUser", LoginRoleIdName = "Developer" },
                    new NavigateRoleIntegrate { Id = 0, NavigateId = 0, LoginRoleId = 0, IsActive = true, NavigateIdName = "AdminNavigate", LoginRoleIdName = "Developer" },
                    new NavigateRoleIntegrate { Id = 0, NavigateId = 0, LoginRoleId = 0, IsActive = true, NavigateIdName = "AdminStorage", LoginRoleIdName = "Admin" },
                    new NavigateRoleIntegrate { Id = 0, NavigateId = 0, LoginRoleId = 0, IsActive = true, NavigateIdName = "AdminStorage", LoginRoleIdName = "Developer" },
                    new NavigateRoleIntegrate { Id = 0, NavigateId = 0, LoginRoleId = 0, IsActive = true, NavigateIdName = "Application", LoginRoleIdName = "Guest" },
                    new NavigateRoleIntegrate { Id = 0, NavigateId = 0, LoginRoleId = 0, IsActive = true, NavigateIdName = "Cli", LoginRoleIdName = "Guest" },
                    new NavigateRoleIntegrate { Id = 0, NavigateId = 0, LoginRoleId = 0, IsActive = true, NavigateIdName = "Code", LoginRoleIdName = "Guest" },
                    new NavigateRoleIntegrate { Id = 0, NavigateId = 0, LoginRoleId = 0, IsActive = true, NavigateIdName = "Code Annotation", LoginRoleIdName = "Guest" },
                    new NavigateRoleIntegrate { Id = 0, NavigateId = 0, LoginRoleId = 0, IsActive = true, NavigateIdName = "Code Counter", LoginRoleIdName = "Guest" },
                    new NavigateRoleIntegrate { Id = 0, NavigateId = 0, LoginRoleId = 0, IsActive = true, NavigateIdName = "Code Data Grid", LoginRoleIdName = "Guest" },
                    new NavigateRoleIntegrate { Id = 0, NavigateId = 0, LoginRoleId = 0, IsActive = true, NavigateIdName = "Code Hello World", LoginRoleIdName = "Guest" },
                    new NavigateRoleIntegrate { Id = 0, NavigateId = 0, LoginRoleId = 0, IsActive = true, NavigateIdName = "Developer", LoginRoleIdName = "Developer" },
                    new NavigateRoleIntegrate { Id = 0, NavigateId = 0, LoginRoleId = 0, IsActive = true, NavigateIdName = "Excel", LoginRoleIdName = "Guest" },
                    new NavigateRoleIntegrate { Id = 0, NavigateId = 0, LoginRoleId = 0, IsActive = true, NavigateIdName = "Home", LoginRoleIdName = "Guest" },
                    new NavigateRoleIntegrate { Id = 0, NavigateId = 0, LoginRoleId = 0, IsActive = true, NavigateIdName = "IIS Server", LoginRoleIdName = "Guest" },
                    new NavigateRoleIntegrate { Id = 0, NavigateId = 0, LoginRoleId = 0, IsActive = true, NavigateIdName = "Install", LoginRoleIdName = "Guest" },
                    new NavigateRoleIntegrate { Id = 0, NavigateId = 0, LoginRoleId = 0, IsActive = null, NavigateIdName = "LoginSignIn", LoginRoleIdName = "Developer" },
                    new NavigateRoleIntegrate { Id = 0, NavigateId = 0, LoginRoleId = 0, IsActive = null, NavigateIdName = "LoginSignIn", LoginRoleIdName = "Guest" },
                    new NavigateRoleIntegrate { Id = 0, NavigateId = 0, LoginRoleId = 0, IsActive = true, NavigateIdName = "LoginSignIn", LoginRoleIdName = "Login" },
                    new NavigateRoleIntegrate { Id = 0, NavigateId = 0, LoginRoleId = 0, IsActive = true, NavigateIdName = "LoginSignOut", LoginRoleIdName = "Admin" },
                    new NavigateRoleIntegrate { Id = 0, NavigateId = 0, LoginRoleId = 0, IsActive = true, NavigateIdName = "LoginSignOut", LoginRoleIdName = "Customer" },
                    new NavigateRoleIntegrate { Id = 0, NavigateId = 0, LoginRoleId = 0, IsActive = true, NavigateIdName = "LoginSignOut", LoginRoleIdName = "Developer" },
                    new NavigateRoleIntegrate { Id = 0, NavigateId = 0, LoginRoleId = 0, IsActive = null, NavigateIdName = "LoginSignOut", LoginRoleIdName = "Login" },
                    new NavigateRoleIntegrate { Id = 0, NavigateId = 0, LoginRoleId = 0, IsActive = null, NavigateIdName = "LoginSignUp", LoginRoleIdName = "Developer" },
                    new NavigateRoleIntegrate { Id = 0, NavigateId = 0, LoginRoleId = 0, IsActive = null, NavigateIdName = "LoginSignUp", LoginRoleIdName = "Guest" },
                    new NavigateRoleIntegrate { Id = 0, NavigateId = 0, LoginRoleId = 0, IsActive = true, NavigateIdName = "LoginSignUp", LoginRoleIdName = "Login" },
                };
                return result;
            }
        }
    }

    public static class StorageFileIntegrateAppCli
    {
        public static List<StorageFileIntegrate> RowList
        {
            get
            {
                var result = new List<StorageFileIntegrate>
                {
                    new StorageFileIntegrate { Id = 0, FileName = "cli.png", Data = Framework.Cli.UtilCli.BlobReadData("Doc.StorageFileIntegrate.cli.png"), DataImageThumbnail = null, Description = null, SourceUrl = null, IsIntegrate = true, IsDelete = false, IdName = "cli.png" },
                    new StorageFileIntegrate { Id = 0, FileName = "counter.png", Data = Framework.Cli.UtilCli.BlobReadData("Doc.StorageFileIntegrate.counter.png"), DataImageThumbnail = null, Description = null, SourceUrl = null, IsIntegrate = true, IsDelete = false, IdName = "counter.png" },
                    new StorageFileIntegrate { Id = 0, FileName = "data-grid.png", Data = Framework.Cli.UtilCli.BlobReadData("Doc.StorageFileIntegrate.data-grid.png"), DataImageThumbnail = null, Description = null, SourceUrl = null, IsIntegrate = true, IsDelete = false, IdName = "data-grid.png" },
                    new StorageFileIntegrate { Id = 0, FileName = "data-grid-annotation.png", Data = Framework.Cli.UtilCli.BlobReadData("Doc.StorageFileIntegrate.data-grid-annotation.png"), DataImageThumbnail = null, Description = null, SourceUrl = null, IsIntegrate = true, IsDelete = false, IdName = "data-grid-annotation.png" },
                    new StorageFileIntegrate { Id = 0, FileName = "db-to-data-grid.png", Data = Framework.Cli.UtilCli.BlobReadData("Doc.StorageFileIntegrate.db-to-data-grid.png"), DataImageThumbnail = null, Description = null, SourceUrl = null, IsIntegrate = true, IsDelete = false, IdName = "db-to-data-grid.png" },
                    new StorageFileIntegrate { Id = 0, FileName = "excel-export.png", Data = Framework.Cli.UtilCli.BlobReadData("Doc.StorageFileIntegrate.excel-export.png"), DataImageThumbnail = null, Description = null, SourceUrl = null, IsIntegrate = true, IsDelete = false, IdName = "excel-export.png" },
                    new StorageFileIntegrate { Id = 0, FileName = "hello-world.png", Data = Framework.Cli.UtilCli.BlobReadData("Doc.StorageFileIntegrate.hello-world.png"), DataImageThumbnail = null, Description = null, SourceUrl = null, IsIntegrate = true, IsDelete = false, IdName = "hello-world.png" },
                    new StorageFileIntegrate { Id = 0, FileName = "iis.png", Data = Framework.Cli.UtilCli.BlobReadData("Doc.StorageFileIntegrate.iis.png"), DataImageThumbnail = null, Description = null, SourceUrl = null, IsIntegrate = true, IsDelete = false, IdName = "iis.png" },
                    new StorageFileIntegrate { Id = 0, FileName = "pillar.png", Data = Framework.Cli.UtilCli.BlobReadData("Doc.StorageFileIntegrate.pillar.png"), DataImageThumbnail = null, Description = null, SourceUrl = null, IsIntegrate = true, IsDelete = false, IdName = "pillar.png" },
                };
                return result;
            }
        }
    }

    public static class ContentIntegrateAppCli
    {
        public static List<ContentIntegrate> RowList
        {
            get
            {
                var result = new List<ContentIntegrate>
                {
                    new ContentIntegrate { Id = 0, Name = "About", NavigateTree = "/about/", NavigatePath = "/about/", TitleHtml = "<i class=\"fas fa-info-circle\"></i> About", TitleLong = "About WorkplaceX Framework", TextMd = Framework.Cli.UtilCli.BlobReadText("Doc.ContentIntegrate.About.md"), TextHtml = Framework.Cli.UtilCli.BlobReadText("Doc.ContentIntegrate.About.html"), Sort = 5, SitemapDate = DateTime.Parse("2021-04-22 10:40", CultureInfo.InvariantCulture), IdName = "About" },
                    new ContentIntegrate { Id = 0, Name = "Application", NavigateTree = "/install/app/", NavigatePath = "/install/", TitleHtml = "<i class=\"fas fa-window-maximize\"></i> Application", TitleLong = "Install Application from Scratch", TextMd = Framework.Cli.UtilCli.BlobReadText("Doc.ContentIntegrate.Application.md"), TextHtml = Framework.Cli.UtilCli.BlobReadText("Doc.ContentIntegrate.Application.html"), Sort = 21, SitemapDate = DateTime.Parse("2021-04-21 01:17", CultureInfo.InvariantCulture), IdName = "Application" },
                    new ContentIntegrate { Id = 0, Name = "Cli", NavigateTree = "/cli/", NavigatePath = "/cli/", TitleHtml = "<i class=\"fas fa-desktop\"></i> CLI", TitleLong = "Command Line Interface (CLI)", TextMd = Framework.Cli.UtilCli.BlobReadText("Doc.ContentIntegrate.Cli.md"), TextHtml = Framework.Cli.UtilCli.BlobReadText("Doc.ContentIntegrate.Cli.html"), Sort = 4, SitemapDate = DateTime.Parse("2021-04-21 01:15", CultureInfo.InvariantCulture), IdName = "Cli" },
                    new ContentIntegrate { Id = 0, Name = "Code", NavigateTree = "/code/", NavigatePath = "/code/", TitleHtml = "<i class=\"fas fa-code-branch\"></i> Code", TitleLong = null, TextMd = Framework.Cli.UtilCli.BlobReadText("Doc.ContentIntegrate.Code.md"), TextHtml = Framework.Cli.UtilCli.BlobReadText("Doc.ContentIntegrate.Code.html"), Sort = 3, SitemapDate = DateTime.Parse("2021-04-21 01:19", CultureInfo.InvariantCulture), IdName = "Code" },
                    new ContentIntegrate { Id = 0, Name = "Code Annotation", NavigateTree = "/code/annotation/", NavigatePath = "/annotation/", TitleHtml = "<i class=\"fas fa-asterisk\"></i> Annotation", TitleLong = "Grid Data Annotation", TextMd = Framework.Cli.UtilCli.BlobReadText("Doc.ContentIntegrate.Code Annotation.md"), TextHtml = Framework.Cli.UtilCli.BlobReadText("Doc.ContentIntegrate.Code Annotation.html"), Sort = 4, SitemapDate = DateTime.Parse("2021-04-22 10:44", CultureInfo.InvariantCulture), IdName = "Code Annotation" },
                    new ContentIntegrate { Id = 0, Name = "Code Counter", NavigateTree = "/code/counter/", NavigatePath = "/counter/", TitleHtml = "<i class=\"fas fa-mouse\"></i> Counter", TitleLong = "Hello World Counter Example", TextMd = Framework.Cli.UtilCli.BlobReadText("Doc.ContentIntegrate.Code Counter.md"), TextHtml = Framework.Cli.UtilCli.BlobReadText("Doc.ContentIntegrate.Code Counter.html"), Sort = 2, SitemapDate = DateTime.Parse("2021-04-22 10:44", CultureInfo.InvariantCulture), IdName = "Code Counter" },
                    new ContentIntegrate { Id = 0, Name = "Code Data Grid", NavigateTree = "/code/data-grid/", NavigatePath = "/data-grid/", TitleHtml = "<i class=\"fas fa-table\"></i> Data Grid", TitleLong = "From Database to DataGrid", TextMd = Framework.Cli.UtilCli.BlobReadText("Doc.ContentIntegrate.Code Data Grid.md"), TextHtml = Framework.Cli.UtilCli.BlobReadText("Doc.ContentIntegrate.Code Data Grid.html"), Sort = 3, SitemapDate = DateTime.Parse("2021-04-22 10:44", CultureInfo.InvariantCulture), IdName = "Code Data Grid" },
                    new ContentIntegrate { Id = 0, Name = "Code Hello World", NavigateTree = "/code/hello-world/", NavigatePath = "/hello-world/", TitleHtml = "<i class=\"fas fa-globe\"></i> Hello World", TitleLong = "Hello World Code Example", TextMd = Framework.Cli.UtilCli.BlobReadText("Doc.ContentIntegrate.Code Hello World.md"), TextHtml = Framework.Cli.UtilCli.BlobReadText("Doc.ContentIntegrate.Code Hello World.html"), Sort = 1, SitemapDate = DateTime.Parse("2021-04-22 10:15", CultureInfo.InvariantCulture), IdName = "Code Hello World" },
                    new ContentIntegrate { Id = 0, Name = "Excel", NavigateTree = "/excel/", NavigatePath = "/excel/", TitleHtml = "<i class=\"fas fa-file-excel\"></i> Excel", TitleLong = "Excel Export and Import", TextMd = Framework.Cli.UtilCli.BlobReadText("Doc.ContentIntegrate.Excel.md"), TextHtml = Framework.Cli.UtilCli.BlobReadText("Doc.ContentIntegrate.Excel.html"), Sort = 4.5, SitemapDate = DateTime.Parse("2021-04-22 10:33", CultureInfo.InvariantCulture), IdName = "Excel" },
                    new ContentIntegrate { Id = 0, Name = "Home", NavigateTree = "/", NavigatePath = "/", TitleHtml = "<i class=\"fas fa-home\"></i> Home", TitleLong = "Business Application Framework", TextMd = Framework.Cli.UtilCli.BlobReadText("Doc.ContentIntegrate.Home.md"), TextHtml = Framework.Cli.UtilCli.BlobReadText("Doc.ContentIntegrate.Home.html"), Sort = 1, SitemapDate = DateTime.Parse("2021-04-21 01:15", CultureInfo.InvariantCulture), IdName = "Home" },
                    new ContentIntegrate { Id = 0, Name = "IIS Server", NavigateTree = "/install/iis/", NavigatePath = "/iis/", TitleHtml = "<i class=\"fas fa-server\"></i> IIS Server", TitleLong = "Install on IIS Server", TextMd = Framework.Cli.UtilCli.BlobReadText("Doc.ContentIntegrate.IIS Server.md"), TextHtml = Framework.Cli.UtilCli.BlobReadText("Doc.ContentIntegrate.IIS Server.html"), Sort = 22, SitemapDate = DateTime.Parse("2021-04-23 09:49", CultureInfo.InvariantCulture), IdName = "IIS Server" },
                    new ContentIntegrate { Id = 0, Name = "Install", NavigateTree = "/install/", NavigatePath = null, TitleHtml = "<i class=\"fas fa-box-open\"></i> Install", TitleLong = null, TextMd = Framework.Cli.UtilCli.BlobReadText("Doc.ContentIntegrate.Install.md"), TextHtml = Framework.Cli.UtilCli.BlobReadText("Doc.ContentIntegrate.Install.html"), Sort = 2, SitemapDate = DateTime.Parse("2021-04-21 02:01", CultureInfo.InvariantCulture), IdName = "Install" },
                };
                return result;
            }
        }
    }
}
